#!/bin/bash

# This script comes with ABSOLUTELY NO WARRANTY, use at own risk
# Copyright (C) 2014 Osiris Alejandro Gomez <osiux@osiux.com.ar>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

YEAR=$(date +%Y)
MONTH=$(date +%m)
DAY=$(date +%d)
DIR=$PWD
DAT='org-task-by-day.dat'
PLT='org-task-by-day.plt'
PNG='org-task-by-day.png'

while getopts "y:m:d:" OPTION
do
  case $OPTION in
    y)
        YEAR=$OPTARG
        ;;
    m)
        MONTH=$OPTARG
        ;;
    d)
        DAY=$OPTARG
        ;;
    o)
        DIR=$OPTARG
        ;;
    p)
        PLT=$OPTARG
        ;;
    g)
        PNG=$OPTARG
        ;;
    t)
        DAT=$OPTARG
        ;;
  esac
done

cd $DIR
echo $YEAR-$MONTH-$DAY

DAYS=$(egrep -ho "CLOCK:(.*)$YEAR-$MONTH-[0-9]{2}" *.org | awk '{print $2}' | tr -d "[" | egrep -o "[0-9\-]+" | sort -u)
FILES=$(egrep -l "CLOCK:(.*)$YEAR-$MONTH-[0-9]{2}" *.org | sort -u)

echo -en 'dia\t' >$DAT
for F in $FILES
do
 printf "%s\tmin\t" $(basename $F .org) >>$DAT
done
echo -en '\n' >>$DAT

MIN=$(echo $DAYS | tr " " "\n" | head -1)
MAX=$(echo $DAYS | tr " " "\n" | tail -1)
XMIN='"'${MIN}'"'
XMAX='"'${MAX}'"'

echo $MIN $XMIN
echo $MAX $XMAX

for DAY in $DAYS
do       
 echo $DAY
 SEP=''
 for F in $FILES
 do
   grep "CLOCK: \[$DAY" $F | tr "[]" " " | awk '{split($10,a,":"); print $2,$4,a[1]*60+a[2]}' | sort | while read T
   do
     START=$(echo $T | awk '{print $2}')
     MINUTES=$(echo $T | awk '{print $3}')
     echo -e "${DAY}\t${SEP}\t${START}\t${MINUTES}" >>$DAT
   done
   ZERO=0
   SEP=$(echo -en "${SEP}${ZERO}\t${ZERO}\t")
 done
done

TDAT=$(wc -l $DAT | awk '{print $1}')

if [ $TDAT -eq 0 ]
then
  echo ERROR empty $DAT
  exit 1
fi

TOTAL=$(echo $FILES | tr " " "\n" | wc -l)

cat <<EOF >$PLT
reset
set terminal png size 1024, 768
set lmargin 5
set bmargin 5
set rmargin 16
set title "Orgmode Task by Day" font "Inconsolata,10"
set xdata time
set ydata time

set timefmt x "%Y-%m-%d"
set format x "%Y-%m-%d"

set timefmt y "%H:%M"
set format y "%H:%M"
set yrange ["00:01":"23:59"]
set key outside font "Inconsolata,10"
set xtics 60*60*24 font "Inconsolata,8" nomirror rotate
set ytics font "Inconsolata,8" nomirror
set mytics
unset mxtics
set xrange [$XMIN:$XMAX]
f=$TOTAL
plot for [i=2:f:2] '$DAT' u 1:i:(0):(column(i+1)*60) with vec lw 4 nohead ti col(i)
EOF

TPLT=$(wc -l $PLT | awk '{print $1}')

if [ $TPLT -eq 0 ]
then
  echo ERROR empty $PLT
  exit 1
fi

gnuplot $PLT >$PNG

echo $PNG

